clc
x<-3
x
y="fahad"
y
assign("z","hello world")
z
t=78
t
D=c(1,2,5,7)
class(D)
D=c(1,2,.5,7)
D=c(1,2,.5,"7")
class(D)
D["7"]
D=c(1,2,.5,"7")
D[D<4]
E=c(2,7,0,0)
M=rbind(D,E)
M
T=cbind(D,E)
T
M=matrix(D,2)
M
M[,-3]
p=norm(20,2,4)
p=rnorm(20,2,4)
plot(p)
setwd('D:\COURS\Master\S2\Introduction modilisation similation\Tp2019')
setwd("D:\COURS\Master\S2\Introduction modilisation similation\Tp2019")
setwd("..\D:\COURS\Master\S2\Introduction modilisation similation\Tp2019")
y1=(x1-1)/sqrt(2)
y1=(x-1)/sqrt(2)
y1=(x1-1)/sqrt(2)
x1=sqrt(-2*log(u))*cos(2*pi*v)
y2=(x2*sqrt(2))+1
n=10000
u=runif(n/2)
v=runif(n/2)
x1=sqrt(-2*log(u))*cos(2*pi*v)
x2=sqrt(-2*log(u))*sin(2*pi*v)
y1=(x1*sqrt(2))+1
y2=(x2*sqrt(2))+1
y=c(y1,y2)
box_cartesien=function(){
n=10000
u=runif(n/2)
v=runif(n/2)
x1=sqrt(-2*log(u))*cos(2*pi*v)
x2=sqrt(-2*log(u))*sin(2*pi*v)
y1=(x1*sqrt(2))+1
y2=(x2*sqrt(2))+1
y=c(y1,y2)
}
box_cartesien()
x=box_cartesien()
x
x=box_cartesien()
2^2
2.^2
y=box_polaire()
return(y)
box_pol=function(){
n=10000
u=runif(n/2)
v=runif(n/2)
s=(u.^2)*(v.^2)
while(s>1){
u=runif(n/2)
v=runif(n/2)
s=(u.^2)*(v.^2)
}
x1=u*sqrt((-2*log(s))/s)
x2=v*sqrt((-2*log(s))/s)
y1=(x1*sqrt(2))+1
y2=(x2*sqrt(2))+1
y=c(y1,y2)
return(y)
}
s=(u.^2)*(v.^2)
while(s>1){
u=runif(n/2)
v=runif(n/2)
s=(u.^2)*(v.^2)
}
x1=u*sqrt((-2*log(s))/s)
x2=v*sqrt((-2*log(s))/s)
y1=(x1*sqrt(2))+1
y2=(x2*sqrt(2))+1
y=c(y1,y2)
return(y)
box_polaire=function(){
n=10000
u=runif(n/2)
v=runif(n/2)
s=(u.^2)*(v.^2)
while(s>1){
u=runif(n/2)
v=runif(n/2)
s=(u.^2)*(v.^2)
}
x1=u*sqrt((-2*log(s))/s)
x2=v*sqrt((-2*log(s))/s)
y1=(x1*sqrt(2))+1
y2=(x2*sqrt(2))+1
y=c(y1,y2)
return(y)
}
y=box_polaire()
s=(u^2)*(v^2)
while(s>1){
u=runif(n/2)
v=runif(n/2)
s=(u.^2)*(v.^2)
}
s=(u^2)*(v^2)
while(s>1){
u=runif(n/2)
v=runif(n/2)
s=(u^2)*(v^2)
}
x1=u*sqrt((-2*log(s))/s)
x2=v*sqrt((-2*log(s))/s)
y1=(x1*sqrt(2))+1
y2=(x2*sqrt(2))+1
y=c(y1,y2)
return(y)
y=box_polaire()
s=(u*u)*(v*v)
while(s>1){
u=runif(n/2)
v=runif(n/2)
s=(u^2)*(v^2)
}
y=box_polaire()
scan()
scan()
scan(nmax = 1)
scan()
library("NLP")
library("twitteR")
library("tm")
library("SnowballC")
library("stringi")
library("topicmodels")
library("ROAuth")
library("wordcloud")
consumer_key <- 'r1nTeZaXHwfjXKARyaZIVurc9'
consumer_secret <- 'EikApVxGDxiybnugl0hDfpPhtuloCjDO43yAJMoXlfY3BBnDya'
access_token <- '2598381610-6d4pf6GUToA7Ib7UYndDOAotJWJqci45FQzG4B6'
access_secret <- 'UnOChQMyMsZLbZuqAA6XEy8dPdfSckDOO3OB3eMbjzMlG'
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
tweets_got <- searchTwitter("#GameOfThrones", n=1000,lang = "fr")
got_tweets <- twListToDF(tweets_got)
View(got_tweets)
got_text<-got_tweets$text
setwd("D:/COURS/Master/S2/Text Mining/TP/TP6")
